/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as GuestRouteImport } from './routes/_guest'
import { Route as AuthedRouteImport } from './routes/_authed'
import { Route as AuthedIndexRouteImport } from './routes/_authed.index'
import { Route as GuestLoginRouteImport } from './routes/_guest.login'
import { Route as GuestAcceptInvitationRouteImport } from './routes/_guest.accept-invitation'
import { Route as AuthedOnboardingRouteImport } from './routes/_authed.onboarding'
import { Route as AuthedAccountRouteImport } from './routes/_authed.account'
import { Route as AuthedOrgIdRouteImport } from './routes/_authed.$orgId'
import { Route as AuthedAccountIndexRouteImport } from './routes/_authed.account.index'
import { Route as AuthedOrgIdIndexRouteImport } from './routes/_authed.$orgId.index'
import { Route as AuthedAccountSecurityRouteImport } from './routes/_authed.account.security'
import { Route as AuthedAccountMembershipsRouteImport } from './routes/_authed.account.memberships'
import { Route as AuthedOrgIdSettingsIndexRouteImport } from './routes/_authed.$orgId.settings.index'
import { Route as AuthedOrgIdSettingsInvitationsRouteImport } from './routes/_authed.$orgId.settings.invitations'

const GuestRoute = GuestRouteImport.update({
  id: '/_guest',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthedRoute = AuthedRouteImport.update({
  id: '/_authed',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthedIndexRoute = AuthedIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthedRoute,
} as any)
const GuestLoginRoute = GuestLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => GuestRoute,
} as any)
const GuestAcceptInvitationRoute = GuestAcceptInvitationRouteImport.update({
  id: '/accept-invitation',
  path: '/accept-invitation',
  getParentRoute: () => GuestRoute,
} as any)
const AuthedOnboardingRoute = AuthedOnboardingRouteImport.update({
  id: '/onboarding',
  path: '/onboarding',
  getParentRoute: () => AuthedRoute,
} as any)
const AuthedAccountRoute = AuthedAccountRouteImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => AuthedRoute,
} as any)
const AuthedOrgIdRoute = AuthedOrgIdRouteImport.update({
  id: '/$orgId',
  path: '/$orgId',
  getParentRoute: () => AuthedRoute,
} as any)
const AuthedAccountIndexRoute = AuthedAccountIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthedAccountRoute,
} as any)
const AuthedOrgIdIndexRoute = AuthedOrgIdIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthedOrgIdRoute,
} as any)
const AuthedAccountSecurityRoute = AuthedAccountSecurityRouteImport.update({
  id: '/security',
  path: '/security',
  getParentRoute: () => AuthedAccountRoute,
} as any)
const AuthedAccountMembershipsRoute =
  AuthedAccountMembershipsRouteImport.update({
    id: '/memberships',
    path: '/memberships',
    getParentRoute: () => AuthedAccountRoute,
  } as any)
const AuthedOrgIdSettingsIndexRoute =
  AuthedOrgIdSettingsIndexRouteImport.update({
    id: '/settings/',
    path: '/settings/',
    getParentRoute: () => AuthedOrgIdRoute,
  } as any)
const AuthedOrgIdSettingsInvitationsRoute =
  AuthedOrgIdSettingsInvitationsRouteImport.update({
    id: '/settings/invitations',
    path: '/settings/invitations',
    getParentRoute: () => AuthedOrgIdRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/$orgId': typeof AuthedOrgIdRouteWithChildren
  '/account': typeof AuthedAccountRouteWithChildren
  '/onboarding': typeof AuthedOnboardingRoute
  '/accept-invitation': typeof GuestAcceptInvitationRoute
  '/login': typeof GuestLoginRoute
  '/': typeof AuthedIndexRoute
  '/account/memberships': typeof AuthedAccountMembershipsRoute
  '/account/security': typeof AuthedAccountSecurityRoute
  '/$orgId/': typeof AuthedOrgIdIndexRoute
  '/account/': typeof AuthedAccountIndexRoute
  '/$orgId/settings/invitations': typeof AuthedOrgIdSettingsInvitationsRoute
  '/$orgId/settings': typeof AuthedOrgIdSettingsIndexRoute
}
export interface FileRoutesByTo {
  '/onboarding': typeof AuthedOnboardingRoute
  '/accept-invitation': typeof GuestAcceptInvitationRoute
  '/login': typeof GuestLoginRoute
  '/': typeof AuthedIndexRoute
  '/account/memberships': typeof AuthedAccountMembershipsRoute
  '/account/security': typeof AuthedAccountSecurityRoute
  '/$orgId': typeof AuthedOrgIdIndexRoute
  '/account': typeof AuthedAccountIndexRoute
  '/$orgId/settings/invitations': typeof AuthedOrgIdSettingsInvitationsRoute
  '/$orgId/settings': typeof AuthedOrgIdSettingsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_authed': typeof AuthedRouteWithChildren
  '/_guest': typeof GuestRouteWithChildren
  '/_authed/$orgId': typeof AuthedOrgIdRouteWithChildren
  '/_authed/account': typeof AuthedAccountRouteWithChildren
  '/_authed/onboarding': typeof AuthedOnboardingRoute
  '/_guest/accept-invitation': typeof GuestAcceptInvitationRoute
  '/_guest/login': typeof GuestLoginRoute
  '/_authed/': typeof AuthedIndexRoute
  '/_authed/account/memberships': typeof AuthedAccountMembershipsRoute
  '/_authed/account/security': typeof AuthedAccountSecurityRoute
  '/_authed/$orgId/': typeof AuthedOrgIdIndexRoute
  '/_authed/account/': typeof AuthedAccountIndexRoute
  '/_authed/$orgId/settings/invitations': typeof AuthedOrgIdSettingsInvitationsRoute
  '/_authed/$orgId/settings/': typeof AuthedOrgIdSettingsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/$orgId'
    | '/account'
    | '/onboarding'
    | '/accept-invitation'
    | '/login'
    | '/'
    | '/account/memberships'
    | '/account/security'
    | '/$orgId/'
    | '/account/'
    | '/$orgId/settings/invitations'
    | '/$orgId/settings'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/onboarding'
    | '/accept-invitation'
    | '/login'
    | '/'
    | '/account/memberships'
    | '/account/security'
    | '/$orgId'
    | '/account'
    | '/$orgId/settings/invitations'
    | '/$orgId/settings'
  id:
    | '__root__'
    | '/_authed'
    | '/_guest'
    | '/_authed/$orgId'
    | '/_authed/account'
    | '/_authed/onboarding'
    | '/_guest/accept-invitation'
    | '/_guest/login'
    | '/_authed/'
    | '/_authed/account/memberships'
    | '/_authed/account/security'
    | '/_authed/$orgId/'
    | '/_authed/account/'
    | '/_authed/$orgId/settings/invitations'
    | '/_authed/$orgId/settings/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthedRoute: typeof AuthedRouteWithChildren
  GuestRoute: typeof GuestRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_guest': {
      id: '/_guest'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof GuestRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authed': {
      id: '/_authed'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authed/': {
      id: '/_authed/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthedIndexRouteImport
      parentRoute: typeof AuthedRoute
    }
    '/_guest/login': {
      id: '/_guest/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof GuestLoginRouteImport
      parentRoute: typeof GuestRoute
    }
    '/_guest/accept-invitation': {
      id: '/_guest/accept-invitation'
      path: '/accept-invitation'
      fullPath: '/accept-invitation'
      preLoaderRoute: typeof GuestAcceptInvitationRouteImport
      parentRoute: typeof GuestRoute
    }
    '/_authed/onboarding': {
      id: '/_authed/onboarding'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof AuthedOnboardingRouteImport
      parentRoute: typeof AuthedRoute
    }
    '/_authed/account': {
      id: '/_authed/account'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof AuthedAccountRouteImport
      parentRoute: typeof AuthedRoute
    }
    '/_authed/$orgId': {
      id: '/_authed/$orgId'
      path: '/$orgId'
      fullPath: '/$orgId'
      preLoaderRoute: typeof AuthedOrgIdRouteImport
      parentRoute: typeof AuthedRoute
    }
    '/_authed/account/': {
      id: '/_authed/account/'
      path: '/'
      fullPath: '/account/'
      preLoaderRoute: typeof AuthedAccountIndexRouteImport
      parentRoute: typeof AuthedAccountRoute
    }
    '/_authed/$orgId/': {
      id: '/_authed/$orgId/'
      path: '/'
      fullPath: '/$orgId/'
      preLoaderRoute: typeof AuthedOrgIdIndexRouteImport
      parentRoute: typeof AuthedOrgIdRoute
    }
    '/_authed/account/security': {
      id: '/_authed/account/security'
      path: '/security'
      fullPath: '/account/security'
      preLoaderRoute: typeof AuthedAccountSecurityRouteImport
      parentRoute: typeof AuthedAccountRoute
    }
    '/_authed/account/memberships': {
      id: '/_authed/account/memberships'
      path: '/memberships'
      fullPath: '/account/memberships'
      preLoaderRoute: typeof AuthedAccountMembershipsRouteImport
      parentRoute: typeof AuthedAccountRoute
    }
    '/_authed/$orgId/settings/': {
      id: '/_authed/$orgId/settings/'
      path: '/settings'
      fullPath: '/$orgId/settings'
      preLoaderRoute: typeof AuthedOrgIdSettingsIndexRouteImport
      parentRoute: typeof AuthedOrgIdRoute
    }
    '/_authed/$orgId/settings/invitations': {
      id: '/_authed/$orgId/settings/invitations'
      path: '/settings/invitations'
      fullPath: '/$orgId/settings/invitations'
      preLoaderRoute: typeof AuthedOrgIdSettingsInvitationsRouteImport
      parentRoute: typeof AuthedOrgIdRoute
    }
  }
}

interface AuthedOrgIdRouteChildren {
  AuthedOrgIdIndexRoute: typeof AuthedOrgIdIndexRoute
  AuthedOrgIdSettingsInvitationsRoute: typeof AuthedOrgIdSettingsInvitationsRoute
  AuthedOrgIdSettingsIndexRoute: typeof AuthedOrgIdSettingsIndexRoute
}

const AuthedOrgIdRouteChildren: AuthedOrgIdRouteChildren = {
  AuthedOrgIdIndexRoute: AuthedOrgIdIndexRoute,
  AuthedOrgIdSettingsInvitationsRoute: AuthedOrgIdSettingsInvitationsRoute,
  AuthedOrgIdSettingsIndexRoute: AuthedOrgIdSettingsIndexRoute,
}

const AuthedOrgIdRouteWithChildren = AuthedOrgIdRoute._addFileChildren(
  AuthedOrgIdRouteChildren,
)

interface AuthedAccountRouteChildren {
  AuthedAccountMembershipsRoute: typeof AuthedAccountMembershipsRoute
  AuthedAccountSecurityRoute: typeof AuthedAccountSecurityRoute
  AuthedAccountIndexRoute: typeof AuthedAccountIndexRoute
}

const AuthedAccountRouteChildren: AuthedAccountRouteChildren = {
  AuthedAccountMembershipsRoute: AuthedAccountMembershipsRoute,
  AuthedAccountSecurityRoute: AuthedAccountSecurityRoute,
  AuthedAccountIndexRoute: AuthedAccountIndexRoute,
}

const AuthedAccountRouteWithChildren = AuthedAccountRoute._addFileChildren(
  AuthedAccountRouteChildren,
)

interface AuthedRouteChildren {
  AuthedOrgIdRoute: typeof AuthedOrgIdRouteWithChildren
  AuthedAccountRoute: typeof AuthedAccountRouteWithChildren
  AuthedOnboardingRoute: typeof AuthedOnboardingRoute
  AuthedIndexRoute: typeof AuthedIndexRoute
}

const AuthedRouteChildren: AuthedRouteChildren = {
  AuthedOrgIdRoute: AuthedOrgIdRouteWithChildren,
  AuthedAccountRoute: AuthedAccountRouteWithChildren,
  AuthedOnboardingRoute: AuthedOnboardingRoute,
  AuthedIndexRoute: AuthedIndexRoute,
}

const AuthedRouteWithChildren =
  AuthedRoute._addFileChildren(AuthedRouteChildren)

interface GuestRouteChildren {
  GuestAcceptInvitationRoute: typeof GuestAcceptInvitationRoute
  GuestLoginRoute: typeof GuestLoginRoute
}

const GuestRouteChildren: GuestRouteChildren = {
  GuestAcceptInvitationRoute: GuestAcceptInvitationRoute,
  GuestLoginRoute: GuestLoginRoute,
}

const GuestRouteWithChildren = GuestRoute._addFileChildren(GuestRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AuthedRoute: AuthedRouteWithChildren,
  GuestRoute: GuestRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
